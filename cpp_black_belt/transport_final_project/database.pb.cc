// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

#include "database.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bus_database_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Stop_database_2eproto;
namespace ProtoTransport {
class StopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stop> _instance;
} _Stop_default_instance_;
class BusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bus> _instance;
} _Bus_default_instance_;
class DatabaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Database> _instance;
} _Database_default_instance_;
}  // namespace ProtoTransport
static void InitDefaultsStop_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Stop_default_instance_;
    new (ptr) ::ProtoTransport::Stop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Stop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Stop_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStop_database_2eproto}, {}};

static void InitDefaultsBus_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Bus_default_instance_;
    new (ptr) ::ProtoTransport::Bus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Bus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Bus_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBus_database_2eproto}, {}};

static void InitDefaultsDatabase_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Database_default_instance_;
    new (ptr) ::ProtoTransport::Database();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Database::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Database_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDatabase_database_2eproto}, {
      &scc_info_Stop_database_2eproto.base,
      &scc_info_Bus_database_2eproto.base,}};

void InitDefaults_database_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Stop_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Bus_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Database_database_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_database_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_database_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_database_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_database_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, buses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, unique_stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, road_route_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, linear_route_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, stop_names_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, bus_names_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, buses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoTransport::Stop)},
  { 6, -1, sizeof(::ProtoTransport::Bus)},
  { 15, -1, sizeof(::ProtoTransport::Database)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Bus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Database_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_database_2eproto = {
  {}, AddDescriptors_database_2eproto, "database.proto", schemas,
  file_default_instances, TableStruct_database_2eproto::offsets,
  file_level_metadata_database_2eproto, 3, file_level_enum_descriptors_database_2eproto, file_level_service_descriptors_database_2eproto,
};

const char descriptor_table_protodef_database_2eproto[] =
  "\n\016database.proto\022\016ProtoTransport\"\025\n\004Stop"
  "\022\r\n\005buses\030\001 \003(\t\"T\n\003Bus\022\r\n\005stops\030\001 \001(\r\022\024\n"
  "\014unique_stops\030\002 \001(\r\022\022\n\nroad_route\030\003 \001(\r\022"
  "\024\n\014linear_route\030\004 \001(\001\"z\n\010Database\022\022\n\nsto"
  "p_names\030\001 \003(\t\022#\n\005stops\030\002 \003(\0132\024.ProtoTran"
  "sport.Stop\022\021\n\tbus_names\030\003 \003(\t\022\"\n\005buses\030\004"
  " \003(\0132\023.ProtoTransport.Busb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_database_2eproto = {
  false, InitDefaults_database_2eproto, 
  descriptor_table_protodef_database_2eproto,
  "database.proto", &assign_descriptors_table_database_2eproto, 273,
};

void AddDescriptors_database_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_database_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_database_2eproto = []() { AddDescriptors_database_2eproto(); return true; }();
namespace ProtoTransport {

// ===================================================================

void Stop::InitAsDefaultInstance() {
}
class Stop::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stop::kBusesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stop::Stop()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Stop)
}
Stop::Stop(const Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      buses_(from.buses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Stop)
}

void Stop::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Stop_database_2eproto.base);
}

Stop::~Stop() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Stop)
  SharedDtor();
}

void Stop::SharedDtor() {
}

void Stop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Stop& Stop::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Stop_database_2eproto.base);
  return *internal_default_instance();
}


void Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buses_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Stop::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Stop*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string buses = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ProtoTransport.Stop.buses");
          object = msg->add_buses();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Stop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string buses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_buses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buses(this->buses_size() - 1).data(),
            static_cast<int>(this->buses(this->buses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Stop.buses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Stop)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string buses = 1;
  for (int i = 0, n = this->buses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buses(i).data(), static_cast<int>(this->buses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Stop.buses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->buses(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Stop)
}

::google::protobuf::uint8* Stop::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string buses = 1;
  for (int i = 0, n = this->buses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buses(i).data(), static_cast<int>(this->buses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Stop.buses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->buses(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Stop)
  return target;
}

size_t Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string buses = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->buses_size());
  for (int i = 0, n = this->buses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->buses(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const Stop* source =
      ::google::protobuf::DynamicCastToGenerated<Stop>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Stop)
    MergeFrom(*source);
  }
}

void Stop::MergeFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buses_.MergeFrom(from.buses_);
}

void Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stop::CopyFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stop::IsInitialized() const {
  return true;
}

void Stop::Swap(Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stop::InternalSwap(Stop* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  buses_.InternalSwap(CastToBase(&other->buses_));
}

::google::protobuf::Metadata Stop::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Bus::InitAsDefaultInstance() {
}
class Bus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bus::kStopsFieldNumber;
const int Bus::kUniqueStopsFieldNumber;
const int Bus::kRoadRouteFieldNumber;
const int Bus::kLinearRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bus::Bus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Bus)
}
Bus::Bus(const Bus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stops_, &from.stops_,
    static_cast<size_t>(reinterpret_cast<char*>(&road_route_) -
    reinterpret_cast<char*>(&stops_)) + sizeof(road_route_));
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Bus)
}

void Bus::SharedCtor() {
  ::memset(&stops_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&road_route_) -
      reinterpret_cast<char*>(&stops_)) + sizeof(road_route_));
}

Bus::~Bus() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Bus)
  SharedDtor();
}

void Bus::SharedDtor() {
}

void Bus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bus& Bus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Bus_database_2eproto.base);
  return *internal_default_instance();
}


void Bus::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stops_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&road_route_) -
      reinterpret_cast<char*>(&stops_)) + sizeof(road_route_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Bus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Bus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 stops = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_stops(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 unique_stops = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_unique_stops(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 road_route = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_road_route(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double linear_route = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_linear_route(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Bus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Bus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 stops = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unique_stops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unique_stops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 road_route = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &road_route_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double linear_route = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &linear_route_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Bus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Bus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Bus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stops = 1;
  if (this->stops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stops(), output);
  }

  // uint32 unique_stops = 2;
  if (this->unique_stops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unique_stops(), output);
  }

  // uint32 road_route = 3;
  if (this->road_route() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->road_route(), output);
  }

  // double linear_route = 4;
  if (this->linear_route() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->linear_route(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Bus)
}

::google::protobuf::uint8* Bus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stops = 1;
  if (this->stops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stops(), target);
  }

  // uint32 unique_stops = 2;
  if (this->unique_stops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unique_stops(), target);
  }

  // uint32 road_route = 3;
  if (this->road_route() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->road_route(), target);
  }

  // double linear_route = 4;
  if (this->linear_route() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->linear_route(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Bus)
  return target;
}

size_t Bus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Bus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 stops = 1;
  if (this->stops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stops());
  }

  // uint32 unique_stops = 2;
  if (this->unique_stops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unique_stops());
  }

  // double linear_route = 4;
  if (this->linear_route() != 0) {
    total_size += 1 + 8;
  }

  // uint32 road_route = 3;
  if (this->road_route() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->road_route());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Bus)
  GOOGLE_DCHECK_NE(&from, this);
  const Bus* source =
      ::google::protobuf::DynamicCastToGenerated<Bus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Bus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Bus)
    MergeFrom(*source);
  }
}

void Bus::MergeFrom(const Bus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Bus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stops() != 0) {
    set_stops(from.stops());
  }
  if (from.unique_stops() != 0) {
    set_unique_stops(from.unique_stops());
  }
  if (from.linear_route() != 0) {
    set_linear_route(from.linear_route());
  }
  if (from.road_route() != 0) {
    set_road_route(from.road_route());
  }
}

void Bus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Bus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bus::CopyFrom(const Bus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Bus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bus::IsInitialized() const {
  return true;
}

void Bus::Swap(Bus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bus::InternalSwap(Bus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(stops_, other->stops_);
  swap(unique_stops_, other->unique_stops_);
  swap(linear_route_, other->linear_route_);
  swap(road_route_, other->road_route_);
}

::google::protobuf::Metadata Bus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Database::InitAsDefaultInstance() {
}
class Database::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Database::kStopNamesFieldNumber;
const int Database::kStopsFieldNumber;
const int Database::kBusNamesFieldNumber;
const int Database::kBusesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Database::Database()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Database)
}
Database::Database(const Database& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      stop_names_(from.stop_names_),
      stops_(from.stops_),
      bus_names_(from.bus_names_),
      buses_(from.buses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Database)
}

void Database::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Database_database_2eproto.base);
}

Database::~Database() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Database)
  SharedDtor();
}

void Database::SharedDtor() {
}

void Database::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Database& Database::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Database_database_2eproto.base);
  return *internal_default_instance();
}


void Database::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stop_names_.Clear();
  stops_.Clear();
  bus_names_.Clear();
  buses_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Database::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Database*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string stop_names = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ProtoTransport.Database.stop_names");
          object = msg->add_stop_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .ProtoTransport.Stop stops = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ProtoTransport::Stop::_InternalParse;
          object = msg->add_stops();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated string bus_names = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("ProtoTransport.Database.bus_names");
          object = msg->add_bus_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .ProtoTransport.Bus buses = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ProtoTransport::Bus::_InternalParse;
          object = msg->add_buses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Database::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Database)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string stop_names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stop_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stop_names(this->stop_names_size() - 1).data(),
            static_cast<int>(this->stop_names(this->stop_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Database.stop_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoTransport.Stop stops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stops()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string bus_names = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_bus_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bus_names(this->bus_names_size() - 1).data(),
            static_cast<int>(this->bus_names(this->bus_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Database.bus_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoTransport.Bus buses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_buses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Database)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Database)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Database::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stop_names = 1;
  for (int i = 0, n = this->stop_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stop_names(i).data(), static_cast<int>(this->stop_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Database.stop_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stop_names(i), output);
  }

  // repeated .ProtoTransport.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stops(static_cast<int>(i)),
      output);
  }

  // repeated string bus_names = 3;
  for (int i = 0, n = this->bus_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_names(i).data(), static_cast<int>(this->bus_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Database.bus_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->bus_names(i), output);
  }

  // repeated .ProtoTransport.Bus buses = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->buses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Database)
}

::google::protobuf::uint8* Database::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stop_names = 1;
  for (int i = 0, n = this->stop_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stop_names(i).data(), static_cast<int>(this->stop_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Database.stop_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->stop_names(i), target);
  }

  // repeated .ProtoTransport.Stop stops = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stops_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stops(static_cast<int>(i)), target);
  }

  // repeated string bus_names = 3;
  for (int i = 0, n = this->bus_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bus_names(i).data(), static_cast<int>(this->bus_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoTransport.Database.bus_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->bus_names(i), target);
  }

  // repeated .ProtoTransport.Bus buses = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->buses(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Database)
  return target;
}

size_t Database::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Database)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string stop_names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stop_names_size());
  for (int i = 0, n = this->stop_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stop_names(i));
  }

  // repeated .ProtoTransport.Stop stops = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stops_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stops(static_cast<int>(i)));
    }
  }

  // repeated string bus_names = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bus_names_size());
  for (int i = 0, n = this->bus_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->bus_names(i));
  }

  // repeated .ProtoTransport.Bus buses = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->buses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Database::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Database)
  GOOGLE_DCHECK_NE(&from, this);
  const Database* source =
      ::google::protobuf::DynamicCastToGenerated<Database>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Database)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Database)
    MergeFrom(*source);
  }
}

void Database::MergeFrom(const Database& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Database)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stop_names_.MergeFrom(from.stop_names_);
  stops_.MergeFrom(from.stops_);
  bus_names_.MergeFrom(from.bus_names_);
  buses_.MergeFrom(from.buses_);
}

void Database::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Database::CopyFrom(const Database& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Database::IsInitialized() const {
  return true;
}

void Database::Swap(Database* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Database::InternalSwap(Database* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stop_names_.InternalSwap(CastToBase(&other->stop_names_));
  CastToBase(&stops_)->InternalSwap(CastToBase(&other->stops_));
  bus_names_.InternalSwap(CastToBase(&other->bus_names_));
  CastToBase(&buses_)->InternalSwap(CastToBase(&other->buses_));
}

::google::protobuf::Metadata Database::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoTransport
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ProtoTransport::Stop* Arena::CreateMaybeMessage< ::ProtoTransport::Stop >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Stop >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Bus* Arena::CreateMaybeMessage< ::ProtoTransport::Bus >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Bus >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Database* Arena::CreateMaybeMessage< ::ProtoTransport::Database >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Database >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
