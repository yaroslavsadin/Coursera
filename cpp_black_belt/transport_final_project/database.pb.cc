// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

#include "database.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bus_database_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Stop_DistanceToStopEntry_DoNotUse_database_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Database_BusesEntry_DoNotUse_database_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Database_StopsEntry_DoNotUse_database_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_database_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Stop_database_2eproto;
namespace ProtoTransport {
class Stop_DistanceToStopEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stop_DistanceToStopEntry_DoNotUse> _instance;
} _Stop_DistanceToStopEntry_DoNotUse_default_instance_;
class StopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stop> _instance;
} _Stop_default_instance_;
class BusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bus> _instance;
} _Bus_default_instance_;
class Database_StopsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Database_StopsEntry_DoNotUse> _instance;
} _Database_StopsEntry_DoNotUse_default_instance_;
class Database_BusesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Database_BusesEntry_DoNotUse> _instance;
} _Database_BusesEntry_DoNotUse_default_instance_;
class DatabaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Database> _instance;
} _Database_default_instance_;
}  // namespace ProtoTransport
static void InitDefaultsStop_DistanceToStopEntry_DoNotUse_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Stop_DistanceToStopEntry_DoNotUse_default_instance_;
    new (ptr) ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse();
  }
  ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Stop_DistanceToStopEntry_DoNotUse_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStop_DistanceToStopEntry_DoNotUse_database_2eproto}, {}};

static void InitDefaultsStop_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Stop_default_instance_;
    new (ptr) ::ProtoTransport::Stop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Stop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Stop_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStop_database_2eproto}, {
      &scc_info_Stop_DistanceToStopEntry_DoNotUse_database_2eproto.base,}};

static void InitDefaultsBus_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Bus_default_instance_;
    new (ptr) ::ProtoTransport::Bus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Bus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Bus_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBus_database_2eproto}, {}};

static void InitDefaultsDatabase_StopsEntry_DoNotUse_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Database_StopsEntry_DoNotUse_default_instance_;
    new (ptr) ::ProtoTransport::Database_StopsEntry_DoNotUse();
  }
  ::ProtoTransport::Database_StopsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Database_StopsEntry_DoNotUse_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDatabase_StopsEntry_DoNotUse_database_2eproto}, {
      &scc_info_Stop_database_2eproto.base,}};

static void InitDefaultsDatabase_BusesEntry_DoNotUse_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Database_BusesEntry_DoNotUse_default_instance_;
    new (ptr) ::ProtoTransport::Database_BusesEntry_DoNotUse();
  }
  ::ProtoTransport::Database_BusesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Database_BusesEntry_DoNotUse_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDatabase_BusesEntry_DoNotUse_database_2eproto}, {
      &scc_info_Bus_database_2eproto.base,}};

static void InitDefaultsDatabase_database_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoTransport::_Database_default_instance_;
    new (ptr) ::ProtoTransport::Database();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoTransport::Database::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Database_database_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDatabase_database_2eproto}, {
      &scc_info_Database_StopsEntry_DoNotUse_database_2eproto.base,
      &scc_info_Database_BusesEntry_DoNotUse_database_2eproto.base,}};

void InitDefaults_database_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Stop_DistanceToStopEntry_DoNotUse_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Stop_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Bus_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Database_StopsEntry_DoNotUse_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Database_BusesEntry_DoNotUse_database_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Database_database_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_database_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_database_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_database_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_database_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, lat_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, lon_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Stop, distance_to_stop__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, unique_stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, is_round_trip_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Bus, route_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_StopsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_StopsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_StopsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_StopsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_BusesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_BusesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_BusesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database_BusesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, stops_),
  PROTOBUF_FIELD_OFFSET(::ProtoTransport::Database, buses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse)},
  { 9, -1, sizeof(::ProtoTransport::Stop)},
  { 17, -1, sizeof(::ProtoTransport::Bus)},
  { 26, 33, sizeof(::ProtoTransport::Database_StopsEntry_DoNotUse)},
  { 35, 42, sizeof(::ProtoTransport::Database_BusesEntry_DoNotUse)},
  { 44, -1, sizeof(::ProtoTransport::Database)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Stop_DistanceToStopEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Bus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Database_StopsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Database_BusesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoTransport::_Database_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_database_2eproto = {
  {}, AddDescriptors_database_2eproto, "database.proto", schemas,
  file_default_instances, TableStruct_database_2eproto::offsets,
  file_level_metadata_database_2eproto, 6, file_level_enum_descriptors_database_2eproto, file_level_service_descriptors_database_2eproto,
};

const char descriptor_table_protodef_database_2eproto[] =
  "\n\016database.proto\022\016ProtoTransport\"\234\001\n\004Sto"
  "p\022\013\n\003lat\030\001 \001(\001\022\013\n\003lon\030\002 \001(\001\022C\n\021distance_"
  "to_stop_\030\003 \003(\0132(.ProtoTransport.Stop.Dis"
  "tanceToStopEntry\0325\n\023DistanceToStopEntry\022"
  "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"P\n\003Bus\022\r"
  "\n\005stops\030\001 \001(\004\022\024\n\014unique_stops\030\002 \001(\004\022\025\n\ri"
  "s_round_trip\030\003 \001(\010\022\r\n\005route\030\004 \003(\r\"\371\001\n\010Da"
  "tabase\0222\n\005stops\030\001 \003(\0132#.ProtoTransport.D"
  "atabase.StopsEntry\0222\n\005buses\030\002 \003(\0132#.Prot"
  "oTransport.Database.BusesEntry\032B\n\nStopsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.Proto"
  "Transport.Stop:\0028\001\032A\n\nBusesEntry\022\013\n\003key\030"
  "\001 \001(\t\022\"\n\005value\030\002 \001(\0132\023.ProtoTransport.Bu"
  "s:\0028\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_database_2eproto = {
  false, InitDefaults_database_2eproto, 
  descriptor_table_protodef_database_2eproto,
  "database.proto", &assign_descriptors_table_database_2eproto, 533,
};

void AddDescriptors_database_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_database_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_database_2eproto = []() { AddDescriptors_database_2eproto(); return true; }();
namespace ProtoTransport {

// ===================================================================

Stop_DistanceToStopEntry_DoNotUse::Stop_DistanceToStopEntry_DoNotUse() {}
Stop_DistanceToStopEntry_DoNotUse::Stop_DistanceToStopEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Stop_DistanceToStopEntry_DoNotUse::MergeFrom(const Stop_DistanceToStopEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Stop_DistanceToStopEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[0];
}
void Stop_DistanceToStopEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Stop_DistanceToStopEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Stop_DistanceToStopEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ProtoTransport.Stop.DistanceToStopEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Stop::InitAsDefaultInstance() {
}
class Stop::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stop::kLatFieldNumber;
const int Stop::kLonFieldNumber;
const int Stop::kDistanceToStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stop::Stop()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Stop)
}
Stop::Stop(const Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  distance_to_stop__.MergeFrom(from.distance_to_stop__);
  ::memcpy(&lat_, &from.lat_,
    static_cast<size_t>(reinterpret_cast<char*>(&lon_) -
    reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Stop)
}

void Stop::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Stop_database_2eproto.base);
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
}

Stop::~Stop() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Stop)
  SharedDtor();
}

void Stop::SharedDtor() {
}

void Stop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Stop& Stop::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Stop_database_2eproto.base);
  return *internal_default_instance();
}


void Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distance_to_stop__.Clear();
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lon_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(lon_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Stop::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Stop*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double lat = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_lat(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double lon = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_lon(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // map<string, int32> distance_to_stop_ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->distance_to_stop__;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Stop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int32> distance_to_stop_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          Stop_DistanceToStopEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Stop_DistanceToStopEntry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&distance_to_stop__);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Stop.DistanceToStopEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Stop)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->lat(), output);
  }

  // double lon = 2;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->lon(), output);
  }

  // map<string, int32> distance_to_stop_ = 3;
  if (!this->distance_to_stop_().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Stop.DistanceToStopEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->distance_to_stop_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->distance_to_stop_().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->distance_to_stop_().begin();
          it != this->distance_to_stop_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Stop_DistanceToStopEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(distance_to_stop__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Stop_DistanceToStopEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->distance_to_stop_().begin();
          it != this->distance_to_stop_().end(); ++it) {
        entry.reset(distance_to_stop__.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Stop)
}

::google::protobuf::uint8* Stop::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double lat = 1;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->lat(), target);
  }

  // double lon = 2;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->lon(), target);
  }

  // map<string, int32> distance_to_stop_ = 3;
  if (!this->distance_to_stop_().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Stop.DistanceToStopEntry.key");
      }
    };

    if (false &&
        this->distance_to_stop_().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->distance_to_stop_().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->distance_to_stop_().begin();
          it != this->distance_to_stop_().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Stop_DistanceToStopEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(distance_to_stop__.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Stop_DistanceToStopEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->distance_to_stop_().begin();
          it != this->distance_to_stop_().end(); ++it) {
        entry.reset(distance_to_stop__.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Stop)
  return target;
}

size_t Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> distance_to_stop_ = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->distance_to_stop__size());
  {
    ::std::unique_ptr<Stop_DistanceToStopEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->distance_to_stop_().begin();
        it != this->distance_to_stop_().end(); ++it) {
      entry.reset(distance_to_stop__.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // double lat = 1;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // double lon = 2;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const Stop* source =
      ::google::protobuf::DynamicCastToGenerated<Stop>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Stop)
    MergeFrom(*source);
  }
}

void Stop::MergeFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  distance_to_stop__.MergeFrom(from.distance_to_stop__);
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
}

void Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stop::CopyFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stop::IsInitialized() const {
  return true;
}

void Stop::Swap(Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stop::InternalSwap(Stop* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  distance_to_stop__.Swap(&other->distance_to_stop__);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
}

::google::protobuf::Metadata Stop::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Bus::InitAsDefaultInstance() {
}
class Bus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bus::kStopsFieldNumber;
const int Bus::kUniqueStopsFieldNumber;
const int Bus::kIsRoundTripFieldNumber;
const int Bus::kRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bus::Bus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Bus)
}
Bus::Bus(const Bus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      route_(from.route_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stops_, &from.stops_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_round_trip_) -
    reinterpret_cast<char*>(&stops_)) + sizeof(is_round_trip_));
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Bus)
}

void Bus::SharedCtor() {
  ::memset(&stops_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_round_trip_) -
      reinterpret_cast<char*>(&stops_)) + sizeof(is_round_trip_));
}

Bus::~Bus() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Bus)
  SharedDtor();
}

void Bus::SharedDtor() {
}

void Bus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bus& Bus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Bus_database_2eproto.base);
  return *internal_default_instance();
}


void Bus::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_.Clear();
  ::memset(&stops_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_round_trip_) -
      reinterpret_cast<char*>(&stops_)) + sizeof(is_round_trip_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Bus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Bus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 stops = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_stops(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 unique_stops = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_unique_stops(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool is_round_trip = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_is_round_trip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 route = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_route();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          msg->add_route(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Bus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Bus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 stops = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 unique_stops = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unique_stops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_round_trip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_round_trip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 route = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_route())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_route())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Bus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Bus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Bus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 stops = 1;
  if (this->stops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->stops(), output);
  }

  // uint64 unique_stops = 2;
  if (this->unique_stops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->unique_stops(), output);
  }

  // bool is_round_trip = 3;
  if (this->is_round_trip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_round_trip(), output);
  }

  // repeated uint32 route = 4;
  if (this->route_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_route_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->route_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->route(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Bus)
}

::google::protobuf::uint8* Bus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Bus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 stops = 1;
  if (this->stops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->stops(), target);
  }

  // uint64 unique_stops = 2;
  if (this->unique_stops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->unique_stops(), target);
  }

  // bool is_round_trip = 3;
  if (this->is_round_trip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_round_trip(), target);
  }

  // repeated uint32 route = 4;
  if (this->route_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _route_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->route_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Bus)
  return target;
}

size_t Bus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Bus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 route = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->route_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _route_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 stops = 1;
  if (this->stops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->stops());
  }

  // uint64 unique_stops = 2;
  if (this->unique_stops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->unique_stops());
  }

  // bool is_round_trip = 3;
  if (this->is_round_trip() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Bus)
  GOOGLE_DCHECK_NE(&from, this);
  const Bus* source =
      ::google::protobuf::DynamicCastToGenerated<Bus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Bus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Bus)
    MergeFrom(*source);
  }
}

void Bus::MergeFrom(const Bus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Bus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_.MergeFrom(from.route_);
  if (from.stops() != 0) {
    set_stops(from.stops());
  }
  if (from.unique_stops() != 0) {
    set_unique_stops(from.unique_stops());
  }
  if (from.is_round_trip() != 0) {
    set_is_round_trip(from.is_round_trip());
  }
}

void Bus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Bus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bus::CopyFrom(const Bus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Bus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bus::IsInitialized() const {
  return true;
}

void Bus::Swap(Bus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bus::InternalSwap(Bus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  route_.InternalSwap(&other->route_);
  swap(stops_, other->stops_);
  swap(unique_stops_, other->unique_stops_);
  swap(is_round_trip_, other->is_round_trip_);
}

::google::protobuf::Metadata Bus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// ===================================================================

Database_StopsEntry_DoNotUse::Database_StopsEntry_DoNotUse() {}
Database_StopsEntry_DoNotUse::Database_StopsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Database_StopsEntry_DoNotUse::MergeFrom(const Database_StopsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Database_StopsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[3];
}
void Database_StopsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Database_StopsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Database_StopsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ProtoTransport.Database.StopsEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

Database_BusesEntry_DoNotUse::Database_BusesEntry_DoNotUse() {}
Database_BusesEntry_DoNotUse::Database_BusesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Database_BusesEntry_DoNotUse::MergeFrom(const Database_BusesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Database_BusesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[4];
}
void Database_BusesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Database_BusesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Database_BusesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "ProtoTransport.Database.BusesEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Database::InitAsDefaultInstance() {
}
class Database::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Database::kStopsFieldNumber;
const int Database::kBusesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Database::Database()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoTransport.Database)
}
Database::Database(const Database& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stops_.MergeFrom(from.stops_);
  buses_.MergeFrom(from.buses_);
  // @@protoc_insertion_point(copy_constructor:ProtoTransport.Database)
}

void Database::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Database_database_2eproto.base);
}

Database::~Database() {
  // @@protoc_insertion_point(destructor:ProtoTransport.Database)
  SharedDtor();
}

void Database::SharedDtor() {
}

void Database::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Database& Database::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Database_database_2eproto.base);
  return *internal_default_instance();
}


void Database::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stops_.Clear();
  buses_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Database::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Database*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, .ProtoTransport.Stop> stops = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ProtoTransport::Database_StopsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->stops_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // map<string, .ProtoTransport.Bus> buses = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::ProtoTransport::Database_BusesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->buses_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Database::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoTransport.Database)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .ProtoTransport.Stop> stops = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          Database_StopsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Database_StopsEntry_DoNotUse,
              ::std::string, ::ProtoTransport::Stop,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop > > parser(&stops_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Database.StopsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .ProtoTransport.Bus> buses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          Database_BusesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Database_BusesEntry_DoNotUse,
              ::std::string, ::ProtoTransport::Bus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus > > parser(&buses_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoTransport.Database.BusesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoTransport.Database)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoTransport.Database)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Database::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ProtoTransport.Stop> stops = 1;
  if (!this->stops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Database.StopsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->stops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->stops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_iterator
          it = this->stops().begin();
          it != this->stops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Database_StopsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(stops_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Database_StopsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_iterator
          it = this->stops().begin();
          it != this->stops().end(); ++it) {
        entry.reset(stops_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .ProtoTransport.Bus> buses = 2;
  if (!this->buses().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Database.BusesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->buses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->buses().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_iterator
          it = this->buses().begin();
          it != this->buses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Database_BusesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(buses_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Database_BusesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_iterator
          it = this->buses().begin();
          it != this->buses().end(); ++it) {
        entry.reset(buses_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoTransport.Database)
}

::google::protobuf::uint8* Database::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoTransport.Database)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ProtoTransport.Stop> stops = 1;
  if (!this->stops().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Database.StopsEntry.key");
      }
    };

    if (false &&
        this->stops().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->stops().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_iterator
          it = this->stops().begin();
          it != this->stops().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Database_StopsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(stops_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Database_StopsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_iterator
          it = this->stops().begin();
          it != this->stops().end(); ++it) {
        entry.reset(stops_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .ProtoTransport.Bus> buses = 2;
  if (!this->buses().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ProtoTransport.Database.BusesEntry.key");
      }
    };

    if (false &&
        this->buses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->buses().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_iterator
          it = this->buses().begin();
          it != this->buses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Database_BusesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(buses_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Database_BusesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_iterator
          it = this->buses().begin();
          it != this->buses().end(); ++it) {
        entry.reset(buses_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoTransport.Database)
  return target;
}

size_t Database::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoTransport.Database)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ProtoTransport.Stop> stops = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stops_size());
  {
    ::std::unique_ptr<Database_StopsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Stop >::const_iterator
        it = this->stops().begin();
        it != this->stops().end(); ++it) {
      entry.reset(stops_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .ProtoTransport.Bus> buses = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->buses_size());
  {
    ::std::unique_ptr<Database_BusesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::ProtoTransport::Bus >::const_iterator
        it = this->buses().begin();
        it != this->buses().end(); ++it) {
      entry.reset(buses_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Database::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoTransport.Database)
  GOOGLE_DCHECK_NE(&from, this);
  const Database* source =
      ::google::protobuf::DynamicCastToGenerated<Database>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoTransport.Database)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoTransport.Database)
    MergeFrom(*source);
  }
}

void Database::MergeFrom(const Database& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoTransport.Database)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stops_.MergeFrom(from.stops_);
  buses_.MergeFrom(from.buses_);
}

void Database::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoTransport.Database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Database::CopyFrom(const Database& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoTransport.Database)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Database::IsInitialized() const {
  return true;
}

void Database::Swap(Database* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Database::InternalSwap(Database* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stops_.Swap(&other->stops_);
  buses_.Swap(&other->buses_);
}

::google::protobuf::Metadata Database::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_database_2eproto);
  return ::file_level_metadata_database_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoTransport
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse* Arena::CreateMaybeMessage< ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Stop_DistanceToStopEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Stop* Arena::CreateMaybeMessage< ::ProtoTransport::Stop >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Stop >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Bus* Arena::CreateMaybeMessage< ::ProtoTransport::Bus >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Bus >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Database_StopsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ProtoTransport::Database_StopsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Database_StopsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Database_BusesEntry_DoNotUse* Arena::CreateMaybeMessage< ::ProtoTransport::Database_BusesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Database_BusesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoTransport::Database* Arena::CreateMaybeMessage< ::ProtoTransport::Database >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoTransport::Database >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
