// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

#ifndef PROTOBUF_INCLUDED_database_2eproto
#define PROTOBUF_INCLUDED_database_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "company.pb.h"
#include "rubric.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_database_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_database_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_database_2eproto();
namespace YellowPages {
class Database;
class DatabaseDefaultTypeInternal;
extern DatabaseDefaultTypeInternal _Database_default_instance_;
class Database_RubricsEntry_DoNotUse;
class Database_RubricsEntry_DoNotUseDefaultTypeInternal;
extern Database_RubricsEntry_DoNotUseDefaultTypeInternal _Database_RubricsEntry_DoNotUse_default_instance_;
}  // namespace YellowPages
namespace google {
namespace protobuf {
template<> ::YellowPages::Database* Arena::CreateMaybeMessage<::YellowPages::Database>(Arena*);
template<> ::YellowPages::Database_RubricsEntry_DoNotUse* Arena::CreateMaybeMessage<::YellowPages::Database_RubricsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace YellowPages {

// ===================================================================

class Database_RubricsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Database_RubricsEntry_DoNotUse, 
    ::google::protobuf::uint64, ::YellowPages::Rubric,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Database_RubricsEntry_DoNotUse, 
    ::google::protobuf::uint64, ::YellowPages::Rubric,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Database_RubricsEntry_DoNotUse();
  Database_RubricsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Database_RubricsEntry_DoNotUse& other);
  static const Database_RubricsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Database_RubricsEntry_DoNotUse*>(&_Database_RubricsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Database :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:YellowPages.Database) */ {
 public:
  Database();
  virtual ~Database();

  Database(const Database& from);

  inline Database& operator=(const Database& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Database(Database&& from) noexcept
    : Database() {
    *this = ::std::move(from);
  }

  inline Database& operator=(Database&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Database& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Database* internal_default_instance() {
    return reinterpret_cast<const Database*>(
               &_Database_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Database* other);
  friend void swap(Database& a, Database& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Database* New() const final {
    return CreateMaybeMessage<Database>(nullptr);
  }

  Database* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Database>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Database& from);
  void MergeFrom(const Database& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Database* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .YellowPages.Company companies = 1;
  int companies_size() const;
  void clear_companies();
  static const int kCompaniesFieldNumber = 1;
  ::YellowPages::Company* mutable_companies(int index);
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Company >*
      mutable_companies();
  const ::YellowPages::Company& companies(int index) const;
  ::YellowPages::Company* add_companies();
  const ::google::protobuf::RepeatedPtrField< ::YellowPages::Company >&
      companies() const;

  // map<uint64, .YellowPages.Rubric> rubrics = 2;
  int rubrics_size() const;
  void clear_rubrics();
  static const int kRubricsFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::YellowPages::Rubric >&
      rubrics() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::YellowPages::Rubric >*
      mutable_rubrics();

  // @@protoc_insertion_point(class_scope:YellowPages.Database)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Company > companies_;
  ::google::protobuf::internal::MapField<
      Database_RubricsEntry_DoNotUse,
      ::google::protobuf::uint64, ::YellowPages::Rubric,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > rubrics_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_database_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Database

// repeated .YellowPages.Company companies = 1;
inline int Database::companies_size() const {
  return companies_.size();
}
inline ::YellowPages::Company* Database::mutable_companies(int index) {
  // @@protoc_insertion_point(field_mutable:YellowPages.Database.companies)
  return companies_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::YellowPages::Company >*
Database::mutable_companies() {
  // @@protoc_insertion_point(field_mutable_list:YellowPages.Database.companies)
  return &companies_;
}
inline const ::YellowPages::Company& Database::companies(int index) const {
  // @@protoc_insertion_point(field_get:YellowPages.Database.companies)
  return companies_.Get(index);
}
inline ::YellowPages::Company* Database::add_companies() {
  // @@protoc_insertion_point(field_add:YellowPages.Database.companies)
  return companies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowPages::Company >&
Database::companies() const {
  // @@protoc_insertion_point(field_list:YellowPages.Database.companies)
  return companies_;
}

// map<uint64, .YellowPages.Rubric> rubrics = 2;
inline int Database::rubrics_size() const {
  return rubrics_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::YellowPages::Rubric >&
Database::rubrics() const {
  // @@protoc_insertion_point(field_map:YellowPages.Database.rubrics)
  return rubrics_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::YellowPages::Rubric >*
Database::mutable_rubrics() {
  // @@protoc_insertion_point(field_mutable_map:YellowPages.Database.rubrics)
  return rubrics_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YellowPages

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_database_2eproto
