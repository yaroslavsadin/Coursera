// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: router.proto

#ifndef PROTOBUF_INCLUDED_router_2eproto
#define PROTOBUF_INCLUDED_router_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_router_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_router_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_router_2eproto();
namespace ProtoTransport {
class Edge;
class EdgeDefaultTypeInternal;
extern EdgeDefaultTypeInternal _Edge_default_instance_;
class EdgeInfo;
class EdgeInfoDefaultTypeInternal;
extern EdgeInfoDefaultTypeInternal _EdgeInfo_default_instance_;
class RouteData;
class RouteDataDefaultTypeInternal;
extern RouteDataDefaultTypeInternal _RouteData_default_instance_;
class Router;
class RouterDefaultTypeInternal;
extern RouterDefaultTypeInternal _Router_default_instance_;
class RoutesData;
class RoutesDataDefaultTypeInternal;
extern RoutesDataDefaultTypeInternal _RoutesData_default_instance_;
}  // namespace ProtoTransport
namespace google {
namespace protobuf {
template<> ::ProtoTransport::Edge* Arena::CreateMaybeMessage<::ProtoTransport::Edge>(Arena*);
template<> ::ProtoTransport::EdgeInfo* Arena::CreateMaybeMessage<::ProtoTransport::EdgeInfo>(Arena*);
template<> ::ProtoTransport::RouteData* Arena::CreateMaybeMessage<::ProtoTransport::RouteData>(Arena*);
template<> ::ProtoTransport::Router* Arena::CreateMaybeMessage<::ProtoTransport::Router>(Arena*);
template<> ::ProtoTransport::RoutesData* Arena::CreateMaybeMessage<::ProtoTransport::RoutesData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoTransport {

// ===================================================================

class Edge :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoTransport.Edge) */ {
 public:
  Edge();
  virtual ~Edge();

  Edge(const Edge& from);

  inline Edge& operator=(const Edge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Edge(Edge&& from) noexcept
    : Edge() {
    *this = ::std::move(from);
  }

  inline Edge& operator=(Edge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Edge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Edge* internal_default_instance() {
    return reinterpret_cast<const Edge*>(
               &_Edge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Edge* other);
  friend void swap(Edge& a, Edge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Edge* New() const final {
    return CreateMaybeMessage<Edge>(nullptr);
  }

  Edge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Edge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Edge& from);
  void MergeFrom(const Edge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Edge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 from = 1;
  void clear_from();
  static const int kFromFieldNumber = 1;
  ::google::protobuf::uint32 from() const;
  void set_from(::google::protobuf::uint32 value);

  // uint32 to = 2;
  void clear_to();
  static const int kToFieldNumber = 2;
  ::google::protobuf::uint32 to() const;
  void set_to(::google::protobuf::uint32 value);

  // double time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  double time() const;
  void set_time(double value);

  // @@protoc_insertion_point(class_scope:ProtoTransport.Edge)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 from_;
  ::google::protobuf::uint32 to_;
  double time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_router_2eproto;
};
// -------------------------------------------------------------------

class EdgeInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoTransport.EdgeInfo) */ {
 public:
  EdgeInfo();
  virtual ~EdgeInfo();

  EdgeInfo(const EdgeInfo& from);

  inline EdgeInfo& operator=(const EdgeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EdgeInfo(EdgeInfo&& from) noexcept
    : EdgeInfo() {
    *this = ::std::move(from);
  }

  inline EdgeInfo& operator=(EdgeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EdgeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EdgeInfo* internal_default_instance() {
    return reinterpret_cast<const EdgeInfo*>(
               &_EdgeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(EdgeInfo* other);
  friend void swap(EdgeInfo& a, EdgeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EdgeInfo* New() const final {
    return CreateMaybeMessage<EdgeInfo>(nullptr);
  }

  EdgeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EdgeInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EdgeInfo& from);
  void MergeFrom(const EdgeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EdgeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string item_name = 5;
  void clear_item_name();
  static const int kItemNameFieldNumber = 5;
  const ::std::string& item_name() const;
  void set_item_name(const ::std::string& value);
  #if LANG_CXX11
  void set_item_name(::std::string&& value);
  #endif
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  ::std::string* mutable_item_name();
  ::std::string* release_item_name();
  void set_allocated_item_name(::std::string* item_name);

  // double time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  double time() const;
  void set_time(double value);

  // bool type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  bool type() const;
  void set_type(bool value);

  // int32 span_count = 6;
  void clear_span_count();
  static const int kSpanCountFieldNumber = 6;
  ::google::protobuf::int32 span_count() const;
  void set_span_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoTransport.EdgeInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr item_name_;
  double time_;
  bool type_;
  ::google::protobuf::int32 span_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_router_2eproto;
};
// -------------------------------------------------------------------

class RouteData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoTransport.RouteData) */ {
 public:
  RouteData();
  virtual ~RouteData();

  RouteData(const RouteData& from);

  inline RouteData& operator=(const RouteData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RouteData(RouteData&& from) noexcept
    : RouteData() {
    *this = ::std::move(from);
  }

  inline RouteData& operator=(RouteData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RouteData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RouteData* internal_default_instance() {
    return reinterpret_cast<const RouteData*>(
               &_RouteData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RouteData* other);
  friend void swap(RouteData& a, RouteData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RouteData* New() const final {
    return CreateMaybeMessage<RouteData>(nullptr);
  }

  RouteData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RouteData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RouteData& from);
  void MergeFrom(const RouteData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RouteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double weight = 1;
  void clear_weight();
  static const int kWeightFieldNumber = 1;
  double weight() const;
  void set_weight(double value);

  // int32 prev_edge = 2;
  void clear_prev_edge();
  static const int kPrevEdgeFieldNumber = 2;
  ::google::protobuf::int32 prev_edge() const;
  void set_prev_edge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoTransport.RouteData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double weight_;
  ::google::protobuf::int32 prev_edge_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_router_2eproto;
};
// -------------------------------------------------------------------

class RoutesData :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoTransport.RoutesData) */ {
 public:
  RoutesData();
  virtual ~RoutesData();

  RoutesData(const RoutesData& from);

  inline RoutesData& operator=(const RoutesData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutesData(RoutesData&& from) noexcept
    : RoutesData() {
    *this = ::std::move(from);
  }

  inline RoutesData& operator=(RoutesData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RoutesData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoutesData* internal_default_instance() {
    return reinterpret_cast<const RoutesData*>(
               &_RoutesData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RoutesData* other);
  friend void swap(RoutesData& a, RoutesData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutesData* New() const final {
    return CreateMaybeMessage<RoutesData>(nullptr);
  }

  RoutesData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoutesData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoutesData& from);
  void MergeFrom(const RoutesData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutesData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoTransport.RouteData data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::ProtoTransport::RouteData* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RouteData >*
      mutable_data();
  const ::ProtoTransport::RouteData& data(int index) const;
  ::ProtoTransport::RouteData* add_data();
  const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RouteData >&
      data() const;

  // @@protoc_insertion_point(class_scope:ProtoTransport.RoutesData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RouteData > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_router_2eproto;
};
// -------------------------------------------------------------------

class Router :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoTransport.Router) */ {
 public:
  Router();
  virtual ~Router();

  Router(const Router& from);

  inline Router& operator=(const Router& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Router(Router&& from) noexcept
    : Router() {
    *this = ::std::move(from);
  }

  inline Router& operator=(Router&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Router& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Router* internal_default_instance() {
    return reinterpret_cast<const Router*>(
               &_Router_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Router* other);
  friend void swap(Router& a, Router& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Router* New() const final {
    return CreateMaybeMessage<Router>(nullptr);
  }

  Router* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Router>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Router& from);
  void MergeFrom(const Router& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Router* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoTransport.Edge edges = 2;
  int edges_size() const;
  void clear_edges();
  static const int kEdgesFieldNumber = 2;
  ::ProtoTransport::Edge* mutable_edges(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::Edge >*
      mutable_edges();
  const ::ProtoTransport::Edge& edges(int index) const;
  ::ProtoTransport::Edge* add_edges();
  const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::Edge >&
      edges() const;

  // repeated .ProtoTransport.EdgeInfo edges_info = 3;
  int edges_info_size() const;
  void clear_edges_info();
  static const int kEdgesInfoFieldNumber = 3;
  ::ProtoTransport::EdgeInfo* mutable_edges_info(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::EdgeInfo >*
      mutable_edges_info();
  const ::ProtoTransport::EdgeInfo& edges_info(int index) const;
  ::ProtoTransport::EdgeInfo* add_edges_info();
  const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::EdgeInfo >&
      edges_info() const;

  // repeated .ProtoTransport.RoutesData routes_data = 4;
  int routes_data_size() const;
  void clear_routes_data();
  static const int kRoutesDataFieldNumber = 4;
  ::ProtoTransport::RoutesData* mutable_routes_data(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RoutesData >*
      mutable_routes_data();
  const ::ProtoTransport::RoutesData& routes_data(int index) const;
  ::ProtoTransport::RoutesData* add_routes_data();
  const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RoutesData >&
      routes_data() const;

  // int32 vertex_count = 1;
  void clear_vertex_count();
  static const int kVertexCountFieldNumber = 1;
  ::google::protobuf::int32 vertex_count() const;
  void set_vertex_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoTransport.Router)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::Edge > edges_;
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::EdgeInfo > edges_info_;
  ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RoutesData > routes_data_;
  ::google::protobuf::int32 vertex_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_router_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Edge

// uint32 from = 1;
inline void Edge::clear_from() {
  from_ = 0u;
}
inline ::google::protobuf::uint32 Edge::from() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Edge.from)
  return from_;
}
inline void Edge::set_from(::google::protobuf::uint32 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.Edge.from)
}

// uint32 to = 2;
inline void Edge::clear_to() {
  to_ = 0u;
}
inline ::google::protobuf::uint32 Edge::to() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Edge.to)
  return to_;
}
inline void Edge::set_to(::google::protobuf::uint32 value) {
  
  to_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.Edge.to)
}

// double time = 3;
inline void Edge::clear_time() {
  time_ = 0;
}
inline double Edge::time() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Edge.time)
  return time_;
}
inline void Edge::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.Edge.time)
}

// -------------------------------------------------------------------

// EdgeInfo

// bool type = 3;
inline void EdgeInfo::clear_type() {
  type_ = false;
}
inline bool EdgeInfo::type() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.EdgeInfo.type)
  return type_;
}
inline void EdgeInfo::set_type(bool value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.EdgeInfo.type)
}

// double time = 4;
inline void EdgeInfo::clear_time() {
  time_ = 0;
}
inline double EdgeInfo::time() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.EdgeInfo.time)
  return time_;
}
inline void EdgeInfo::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.EdgeInfo.time)
}

// string item_name = 5;
inline void EdgeInfo::clear_item_name() {
  item_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EdgeInfo::item_name() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.EdgeInfo.item_name)
  return item_name_.GetNoArena();
}
inline void EdgeInfo::set_item_name(const ::std::string& value) {
  
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoTransport.EdgeInfo.item_name)
}
#if LANG_CXX11
inline void EdgeInfo::set_item_name(::std::string&& value) {
  
  item_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoTransport.EdgeInfo.item_name)
}
#endif
inline void EdgeInfo::set_item_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoTransport.EdgeInfo.item_name)
}
inline void EdgeInfo::set_item_name(const char* value, size_t size) {
  
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoTransport.EdgeInfo.item_name)
}
inline ::std::string* EdgeInfo::mutable_item_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoTransport.EdgeInfo.item_name)
  return item_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EdgeInfo::release_item_name() {
  // @@protoc_insertion_point(field_release:ProtoTransport.EdgeInfo.item_name)
  
  return item_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EdgeInfo::set_allocated_item_name(::std::string* item_name) {
  if (item_name != nullptr) {
    
  } else {
    
  }
  item_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_name);
  // @@protoc_insertion_point(field_set_allocated:ProtoTransport.EdgeInfo.item_name)
}

// int32 span_count = 6;
inline void EdgeInfo::clear_span_count() {
  span_count_ = 0;
}
inline ::google::protobuf::int32 EdgeInfo::span_count() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.EdgeInfo.span_count)
  return span_count_;
}
inline void EdgeInfo::set_span_count(::google::protobuf::int32 value) {
  
  span_count_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.EdgeInfo.span_count)
}

// -------------------------------------------------------------------

// RouteData

// double weight = 1;
inline void RouteData::clear_weight() {
  weight_ = 0;
}
inline double RouteData::weight() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.RouteData.weight)
  return weight_;
}
inline void RouteData::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.RouteData.weight)
}

// int32 prev_edge = 2;
inline void RouteData::clear_prev_edge() {
  prev_edge_ = 0;
}
inline ::google::protobuf::int32 RouteData::prev_edge() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.RouteData.prev_edge)
  return prev_edge_;
}
inline void RouteData::set_prev_edge(::google::protobuf::int32 value) {
  
  prev_edge_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.RouteData.prev_edge)
}

// -------------------------------------------------------------------

// RoutesData

// repeated .ProtoTransport.RouteData data = 1;
inline int RoutesData::data_size() const {
  return data_.size();
}
inline void RoutesData::clear_data() {
  data_.Clear();
}
inline ::ProtoTransport::RouteData* RoutesData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoTransport.RoutesData.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RouteData >*
RoutesData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoTransport.RoutesData.data)
  return &data_;
}
inline const ::ProtoTransport::RouteData& RoutesData::data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoTransport.RoutesData.data)
  return data_.Get(index);
}
inline ::ProtoTransport::RouteData* RoutesData::add_data() {
  // @@protoc_insertion_point(field_add:ProtoTransport.RoutesData.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RouteData >&
RoutesData::data() const {
  // @@protoc_insertion_point(field_list:ProtoTransport.RoutesData.data)
  return data_;
}

// -------------------------------------------------------------------

// Router

// int32 vertex_count = 1;
inline void Router::clear_vertex_count() {
  vertex_count_ = 0;
}
inline ::google::protobuf::int32 Router::vertex_count() const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Router.vertex_count)
  return vertex_count_;
}
inline void Router::set_vertex_count(::google::protobuf::int32 value) {
  
  vertex_count_ = value;
  // @@protoc_insertion_point(field_set:ProtoTransport.Router.vertex_count)
}

// repeated .ProtoTransport.Edge edges = 2;
inline int Router::edges_size() const {
  return edges_.size();
}
inline void Router::clear_edges() {
  edges_.Clear();
}
inline ::ProtoTransport::Edge* Router::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoTransport.Router.edges)
  return edges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTransport::Edge >*
Router::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:ProtoTransport.Router.edges)
  return &edges_;
}
inline const ::ProtoTransport::Edge& Router::edges(int index) const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Router.edges)
  return edges_.Get(index);
}
inline ::ProtoTransport::Edge* Router::add_edges() {
  // @@protoc_insertion_point(field_add:ProtoTransport.Router.edges)
  return edges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::Edge >&
Router::edges() const {
  // @@protoc_insertion_point(field_list:ProtoTransport.Router.edges)
  return edges_;
}

// repeated .ProtoTransport.EdgeInfo edges_info = 3;
inline int Router::edges_info_size() const {
  return edges_info_.size();
}
inline void Router::clear_edges_info() {
  edges_info_.Clear();
}
inline ::ProtoTransport::EdgeInfo* Router::mutable_edges_info(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoTransport.Router.edges_info)
  return edges_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTransport::EdgeInfo >*
Router::mutable_edges_info() {
  // @@protoc_insertion_point(field_mutable_list:ProtoTransport.Router.edges_info)
  return &edges_info_;
}
inline const ::ProtoTransport::EdgeInfo& Router::edges_info(int index) const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Router.edges_info)
  return edges_info_.Get(index);
}
inline ::ProtoTransport::EdgeInfo* Router::add_edges_info() {
  // @@protoc_insertion_point(field_add:ProtoTransport.Router.edges_info)
  return edges_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::EdgeInfo >&
Router::edges_info() const {
  // @@protoc_insertion_point(field_list:ProtoTransport.Router.edges_info)
  return edges_info_;
}

// repeated .ProtoTransport.RoutesData routes_data = 4;
inline int Router::routes_data_size() const {
  return routes_data_.size();
}
inline void Router::clear_routes_data() {
  routes_data_.Clear();
}
inline ::ProtoTransport::RoutesData* Router::mutable_routes_data(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoTransport.Router.routes_data)
  return routes_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RoutesData >*
Router::mutable_routes_data() {
  // @@protoc_insertion_point(field_mutable_list:ProtoTransport.Router.routes_data)
  return &routes_data_;
}
inline const ::ProtoTransport::RoutesData& Router::routes_data(int index) const {
  // @@protoc_insertion_point(field_get:ProtoTransport.Router.routes_data)
  return routes_data_.Get(index);
}
inline ::ProtoTransport::RoutesData* Router::add_routes_data() {
  // @@protoc_insertion_point(field_add:ProtoTransport.Router.routes_data)
  return routes_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTransport::RoutesData >&
Router::routes_data() const {
  // @@protoc_insertion_point(field_list:ProtoTransport.Router.routes_data)
  return routes_data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoTransport

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_router_2eproto
