// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: address.proto

#ifndef PROTOBUF_INCLUDED_address_2eproto
#define PROTOBUF_INCLUDED_address_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_address_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_address_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_address_2eproto();
namespace YellowPages {
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
class AddressComponent;
class AddressComponentDefaultTypeInternal;
extern AddressComponentDefaultTypeInternal _AddressComponent_default_instance_;
class Coords;
class CoordsDefaultTypeInternal;
extern CoordsDefaultTypeInternal _Coords_default_instance_;
}  // namespace YellowPages
namespace google {
namespace protobuf {
template<> ::YellowPages::Address* Arena::CreateMaybeMessage<::YellowPages::Address>(Arena*);
template<> ::YellowPages::AddressComponent* Arena::CreateMaybeMessage<::YellowPages::AddressComponent>(Arena*);
template<> ::YellowPages::Coords* Arena::CreateMaybeMessage<::YellowPages::Coords>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace YellowPages {

enum AddressComponent_Type {
  AddressComponent_Type_COUNTRY = 0,
  AddressComponent_Type_REGION = 1,
  AddressComponent_Type_CITY = 2,
  AddressComponent_Type_STREET = 3,
  AddressComponent_Type_HOUSE = 4,
  AddressComponent_Type_AddressComponent_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AddressComponent_Type_AddressComponent_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AddressComponent_Type_IsValid(int value);
const AddressComponent_Type AddressComponent_Type_Type_MIN = AddressComponent_Type_COUNTRY;
const AddressComponent_Type AddressComponent_Type_Type_MAX = AddressComponent_Type_HOUSE;
const int AddressComponent_Type_Type_ARRAYSIZE = AddressComponent_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddressComponent_Type_descriptor();
inline const ::std::string& AddressComponent_Type_Name(AddressComponent_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddressComponent_Type_descriptor(), value);
}
inline bool AddressComponent_Type_Parse(
    const ::std::string& name, AddressComponent_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddressComponent_Type>(
    AddressComponent_Type_descriptor(), name, value);
}
// ===================================================================

class AddressComponent :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:YellowPages.AddressComponent) */ {
 public:
  AddressComponent();
  virtual ~AddressComponent();

  AddressComponent(const AddressComponent& from);

  inline AddressComponent& operator=(const AddressComponent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddressComponent(AddressComponent&& from) noexcept
    : AddressComponent() {
    *this = ::std::move(from);
  }

  inline AddressComponent& operator=(AddressComponent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AddressComponent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddressComponent* internal_default_instance() {
    return reinterpret_cast<const AddressComponent*>(
               &_AddressComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AddressComponent* other);
  friend void swap(AddressComponent& a, AddressComponent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddressComponent* New() const final {
    return CreateMaybeMessage<AddressComponent>(nullptr);
  }

  AddressComponent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddressComponent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddressComponent& from);
  void MergeFrom(const AddressComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddressComponent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AddressComponent_Type Type;
  static const Type COUNTRY =
    AddressComponent_Type_COUNTRY;
  static const Type REGION =
    AddressComponent_Type_REGION;
  static const Type CITY =
    AddressComponent_Type_CITY;
  static const Type STREET =
    AddressComponent_Type_STREET;
  static const Type HOUSE =
    AddressComponent_Type_HOUSE;
  static inline bool Type_IsValid(int value) {
    return AddressComponent_Type_IsValid(value);
  }
  static const Type Type_MIN =
    AddressComponent_Type_Type_MIN;
  static const Type Type_MAX =
    AddressComponent_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    AddressComponent_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return AddressComponent_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return AddressComponent_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return AddressComponent_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:YellowPages.AddressComponent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_address_2eproto;
};
// -------------------------------------------------------------------

class Coords :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:YellowPages.Coords) */ {
 public:
  Coords();
  virtual ~Coords();

  Coords(const Coords& from);

  inline Coords& operator=(const Coords& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Coords(Coords&& from) noexcept
    : Coords() {
    *this = ::std::move(from);
  }

  inline Coords& operator=(Coords&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Coords& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Coords* internal_default_instance() {
    return reinterpret_cast<const Coords*>(
               &_Coords_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Coords* other);
  friend void swap(Coords& a, Coords& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Coords* New() const final {
    return CreateMaybeMessage<Coords>(nullptr);
  }

  Coords* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Coords>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Coords& from);
  void MergeFrom(const Coords& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Coords* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // double lon = 2;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  double lon() const;
  void set_lon(double value);

  // @@protoc_insertion_point(class_scope:YellowPages.Coords)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double lat_;
  double lon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_address_2eproto;
};
// -------------------------------------------------------------------

class Address :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:YellowPages.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Address(Address&& from) noexcept
    : Address() {
    *this = ::std::move(from);
  }

  inline Address& operator=(Address&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Address& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Address* other);
  friend void swap(Address& a, Address& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Address* New() const final {
    return CreateMaybeMessage<Address>(nullptr);
  }

  Address* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Address>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Address* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .YellowPages.AddressComponent components = 2;
  int components_size() const;
  void clear_components();
  static const int kComponentsFieldNumber = 2;
  ::YellowPages::AddressComponent* mutable_components(int index);
  ::google::protobuf::RepeatedPtrField< ::YellowPages::AddressComponent >*
      mutable_components();
  const ::YellowPages::AddressComponent& components(int index) const;
  ::YellowPages::AddressComponent* add_components();
  const ::google::protobuf::RepeatedPtrField< ::YellowPages::AddressComponent >&
      components() const;

  // string formatted = 1;
  void clear_formatted();
  static const int kFormattedFieldNumber = 1;
  const ::std::string& formatted() const;
  void set_formatted(const ::std::string& value);
  #if LANG_CXX11
  void set_formatted(::std::string&& value);
  #endif
  void set_formatted(const char* value);
  void set_formatted(const char* value, size_t size);
  ::std::string* mutable_formatted();
  ::std::string* release_formatted();
  void set_allocated_formatted(::std::string* formatted);

  // .YellowPages.Coords coords = 3;
  bool has_coords() const;
  void clear_coords();
  static const int kCoordsFieldNumber = 3;
  const ::YellowPages::Coords& coords() const;
  ::YellowPages::Coords* release_coords();
  ::YellowPages::Coords* mutable_coords();
  void set_allocated_coords(::YellowPages::Coords* coords);

  // @@protoc_insertion_point(class_scope:YellowPages.Address)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::YellowPages::AddressComponent > components_;
  ::google::protobuf::internal::ArenaStringPtr formatted_;
  ::YellowPages::Coords* coords_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_address_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddressComponent

// string value = 1;
inline void AddressComponent::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressComponent::value() const {
  // @@protoc_insertion_point(field_get:YellowPages.AddressComponent.value)
  return value_.GetNoArena();
}
inline void AddressComponent::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YellowPages.AddressComponent.value)
}
#if LANG_CXX11
inline void AddressComponent::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YellowPages.AddressComponent.value)
}
#endif
inline void AddressComponent::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YellowPages.AddressComponent.value)
}
inline void AddressComponent::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YellowPages.AddressComponent.value)
}
inline ::std::string* AddressComponent::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:YellowPages.AddressComponent.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressComponent::release_value() {
  // @@protoc_insertion_point(field_release:YellowPages.AddressComponent.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressComponent::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:YellowPages.AddressComponent.value)
}

// -------------------------------------------------------------------

// Coords

// double lat = 1;
inline void Coords::clear_lat() {
  lat_ = 0;
}
inline double Coords::lat() const {
  // @@protoc_insertion_point(field_get:YellowPages.Coords.lat)
  return lat_;
}
inline void Coords::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:YellowPages.Coords.lat)
}

// double lon = 2;
inline void Coords::clear_lon() {
  lon_ = 0;
}
inline double Coords::lon() const {
  // @@protoc_insertion_point(field_get:YellowPages.Coords.lon)
  return lon_;
}
inline void Coords::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:YellowPages.Coords.lon)
}

// -------------------------------------------------------------------

// Address

// string formatted = 1;
inline void Address::clear_formatted() {
  formatted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Address::formatted() const {
  // @@protoc_insertion_point(field_get:YellowPages.Address.formatted)
  return formatted_.GetNoArena();
}
inline void Address::set_formatted(const ::std::string& value) {
  
  formatted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YellowPages.Address.formatted)
}
#if LANG_CXX11
inline void Address::set_formatted(::std::string&& value) {
  
  formatted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:YellowPages.Address.formatted)
}
#endif
inline void Address::set_formatted(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  formatted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YellowPages.Address.formatted)
}
inline void Address::set_formatted(const char* value, size_t size) {
  
  formatted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YellowPages.Address.formatted)
}
inline ::std::string* Address::mutable_formatted() {
  
  // @@protoc_insertion_point(field_mutable:YellowPages.Address.formatted)
  return formatted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_formatted() {
  // @@protoc_insertion_point(field_release:YellowPages.Address.formatted)
  
  return formatted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_formatted(::std::string* formatted) {
  if (formatted != nullptr) {
    
  } else {
    
  }
  formatted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formatted);
  // @@protoc_insertion_point(field_set_allocated:YellowPages.Address.formatted)
}

// repeated .YellowPages.AddressComponent components = 2;
inline int Address::components_size() const {
  return components_.size();
}
inline void Address::clear_components() {
  components_.Clear();
}
inline ::YellowPages::AddressComponent* Address::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:YellowPages.Address.components)
  return components_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::YellowPages::AddressComponent >*
Address::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:YellowPages.Address.components)
  return &components_;
}
inline const ::YellowPages::AddressComponent& Address::components(int index) const {
  // @@protoc_insertion_point(field_get:YellowPages.Address.components)
  return components_.Get(index);
}
inline ::YellowPages::AddressComponent* Address::add_components() {
  // @@protoc_insertion_point(field_add:YellowPages.Address.components)
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowPages::AddressComponent >&
Address::components() const {
  // @@protoc_insertion_point(field_list:YellowPages.Address.components)
  return components_;
}

// .YellowPages.Coords coords = 3;
inline bool Address::has_coords() const {
  return this != internal_default_instance() && coords_ != nullptr;
}
inline void Address::clear_coords() {
  if (GetArenaNoVirtual() == nullptr && coords_ != nullptr) {
    delete coords_;
  }
  coords_ = nullptr;
}
inline const ::YellowPages::Coords& Address::coords() const {
  const ::YellowPages::Coords* p = coords_;
  // @@protoc_insertion_point(field_get:YellowPages.Address.coords)
  return p != nullptr ? *p : *reinterpret_cast<const ::YellowPages::Coords*>(
      &::YellowPages::_Coords_default_instance_);
}
inline ::YellowPages::Coords* Address::release_coords() {
  // @@protoc_insertion_point(field_release:YellowPages.Address.coords)
  
  ::YellowPages::Coords* temp = coords_;
  coords_ = nullptr;
  return temp;
}
inline ::YellowPages::Coords* Address::mutable_coords() {
  
  if (coords_ == nullptr) {
    auto* p = CreateMaybeMessage<::YellowPages::Coords>(GetArenaNoVirtual());
    coords_ = p;
  }
  // @@protoc_insertion_point(field_mutable:YellowPages.Address.coords)
  return coords_;
}
inline void Address::set_allocated_coords(::YellowPages::Coords* coords) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete coords_;
  }
  if (coords) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      coords = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coords, submessage_arena);
    }
    
  } else {
    
  }
  coords_ = coords;
  // @@protoc_insertion_point(field_set_allocated:YellowPages.Address.coords)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YellowPages

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::YellowPages::AddressComponent_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YellowPages::AddressComponent_Type>() {
  return ::YellowPages::AddressComponent_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_address_2eproto
