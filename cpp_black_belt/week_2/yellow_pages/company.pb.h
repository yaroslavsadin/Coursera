// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: company.proto

#ifndef PROTOBUF_INCLUDED_company_2eproto
#define PROTOBUF_INCLUDED_company_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "address.pb.h"
#include "name.pb.h"
#include "phone.pb.h"
#include "working_time.pb.h"
#include "url.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_company_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_company_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_company_2eproto();
namespace YellowPages {
class Company;
class CompanyDefaultTypeInternal;
extern CompanyDefaultTypeInternal _Company_default_instance_;
}  // namespace YellowPages
namespace google {
namespace protobuf {
template<> ::YellowPages::Company* Arena::CreateMaybeMessage<::YellowPages::Company>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace YellowPages {

// ===================================================================

class Company :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:YellowPages.Company) */ {
 public:
  Company();
  virtual ~Company();

  Company(const Company& from);

  inline Company& operator=(const Company& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Company(Company&& from) noexcept
    : Company() {
    *this = ::std::move(from);
  }

  inline Company& operator=(Company&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Company& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Company* internal_default_instance() {
    return reinterpret_cast<const Company*>(
               &_Company_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Company* other);
  friend void swap(Company& a, Company& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Company* New() const final {
    return CreateMaybeMessage<Company>(nullptr);
  }

  Company* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Company>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Company& from);
  void MergeFrom(const Company& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Company* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .YellowPages.Name names = 2;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 2;
  ::YellowPages::Name* mutable_names(int index);
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Name >*
      mutable_names();
  const ::YellowPages::Name& names(int index) const;
  ::YellowPages::Name* add_names();
  const ::google::protobuf::RepeatedPtrField< ::YellowPages::Name >&
      names() const;

  // repeated .YellowPages.Phone phones = 3;
  int phones_size() const;
  void clear_phones();
  static const int kPhonesFieldNumber = 3;
  ::YellowPages::Phone* mutable_phones(int index);
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Phone >*
      mutable_phones();
  const ::YellowPages::Phone& phones(int index) const;
  ::YellowPages::Phone* add_phones();
  const ::google::protobuf::RepeatedPtrField< ::YellowPages::Phone >&
      phones() const;

  // repeated .YellowPages.Url urls = 4;
  int urls_size() const;
  void clear_urls();
  static const int kUrlsFieldNumber = 4;
  ::YellowPages::Url* mutable_urls(int index);
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Url >*
      mutable_urls();
  const ::YellowPages::Url& urls(int index) const;
  ::YellowPages::Url* add_urls();
  const ::google::protobuf::RepeatedPtrField< ::YellowPages::Url >&
      urls() const;

  // .YellowPages.Address address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::YellowPages::Address& address() const;
  ::YellowPages::Address* release_address();
  ::YellowPages::Address* mutable_address();
  void set_allocated_address(::YellowPages::Address* address);

  // .YellowPages.WorkingTime working_time = 6;
  bool has_working_time() const;
  void clear_working_time();
  static const int kWorkingTimeFieldNumber = 6;
  const ::YellowPages::WorkingTime& working_time() const;
  ::YellowPages::WorkingTime* release_working_time();
  ::YellowPages::WorkingTime* mutable_working_time();
  void set_allocated_working_time(::YellowPages::WorkingTime* working_time);

  // @@protoc_insertion_point(class_scope:YellowPages.Company)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Name > names_;
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Phone > phones_;
  ::google::protobuf::RepeatedPtrField< ::YellowPages::Url > urls_;
  ::YellowPages::Address* address_;
  ::YellowPages::WorkingTime* working_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_company_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Company

// .YellowPages.Address address = 1;
inline bool Company::has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline const ::YellowPages::Address& Company::address() const {
  const ::YellowPages::Address* p = address_;
  // @@protoc_insertion_point(field_get:YellowPages.Company.address)
  return p != nullptr ? *p : *reinterpret_cast<const ::YellowPages::Address*>(
      &::YellowPages::_Address_default_instance_);
}
inline ::YellowPages::Address* Company::release_address() {
  // @@protoc_insertion_point(field_release:YellowPages.Company.address)
  
  ::YellowPages::Address* temp = address_;
  address_ = nullptr;
  return temp;
}
inline ::YellowPages::Address* Company::mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<::YellowPages::Address>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:YellowPages.Company.address)
  return address_;
}
inline void Company::set_allocated_address(::YellowPages::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:YellowPages.Company.address)
}

// repeated .YellowPages.Name names = 2;
inline int Company::names_size() const {
  return names_.size();
}
inline ::YellowPages::Name* Company::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:YellowPages.Company.names)
  return names_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::YellowPages::Name >*
Company::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:YellowPages.Company.names)
  return &names_;
}
inline const ::YellowPages::Name& Company::names(int index) const {
  // @@protoc_insertion_point(field_get:YellowPages.Company.names)
  return names_.Get(index);
}
inline ::YellowPages::Name* Company::add_names() {
  // @@protoc_insertion_point(field_add:YellowPages.Company.names)
  return names_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowPages::Name >&
Company::names() const {
  // @@protoc_insertion_point(field_list:YellowPages.Company.names)
  return names_;
}

// repeated .YellowPages.Phone phones = 3;
inline int Company::phones_size() const {
  return phones_.size();
}
inline ::YellowPages::Phone* Company::mutable_phones(int index) {
  // @@protoc_insertion_point(field_mutable:YellowPages.Company.phones)
  return phones_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::YellowPages::Phone >*
Company::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_list:YellowPages.Company.phones)
  return &phones_;
}
inline const ::YellowPages::Phone& Company::phones(int index) const {
  // @@protoc_insertion_point(field_get:YellowPages.Company.phones)
  return phones_.Get(index);
}
inline ::YellowPages::Phone* Company::add_phones() {
  // @@protoc_insertion_point(field_add:YellowPages.Company.phones)
  return phones_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowPages::Phone >&
Company::phones() const {
  // @@protoc_insertion_point(field_list:YellowPages.Company.phones)
  return phones_;
}

// repeated .YellowPages.Url urls = 4;
inline int Company::urls_size() const {
  return urls_.size();
}
inline ::YellowPages::Url* Company::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:YellowPages.Company.urls)
  return urls_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::YellowPages::Url >*
Company::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:YellowPages.Company.urls)
  return &urls_;
}
inline const ::YellowPages::Url& Company::urls(int index) const {
  // @@protoc_insertion_point(field_get:YellowPages.Company.urls)
  return urls_.Get(index);
}
inline ::YellowPages::Url* Company::add_urls() {
  // @@protoc_insertion_point(field_add:YellowPages.Company.urls)
  return urls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YellowPages::Url >&
Company::urls() const {
  // @@protoc_insertion_point(field_list:YellowPages.Company.urls)
  return urls_;
}

// .YellowPages.WorkingTime working_time = 6;
inline bool Company::has_working_time() const {
  return this != internal_default_instance() && working_time_ != nullptr;
}
inline const ::YellowPages::WorkingTime& Company::working_time() const {
  const ::YellowPages::WorkingTime* p = working_time_;
  // @@protoc_insertion_point(field_get:YellowPages.Company.working_time)
  return p != nullptr ? *p : *reinterpret_cast<const ::YellowPages::WorkingTime*>(
      &::YellowPages::_WorkingTime_default_instance_);
}
inline ::YellowPages::WorkingTime* Company::release_working_time() {
  // @@protoc_insertion_point(field_release:YellowPages.Company.working_time)
  
  ::YellowPages::WorkingTime* temp = working_time_;
  working_time_ = nullptr;
  return temp;
}
inline ::YellowPages::WorkingTime* Company::mutable_working_time() {
  
  if (working_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::YellowPages::WorkingTime>(GetArenaNoVirtual());
    working_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:YellowPages.Company.working_time)
  return working_time_;
}
inline void Company::set_allocated_working_time(::YellowPages::WorkingTime* working_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(working_time_);
  }
  if (working_time) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      working_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, working_time, submessage_arena);
    }
    
  } else {
    
  }
  working_time_ = working_time;
  // @@protoc_insertion_point(field_set_allocated:YellowPages.Company.working_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace YellowPages

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_company_2eproto
