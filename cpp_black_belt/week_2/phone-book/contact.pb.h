// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contact.proto

#ifndef PROTOBUF_INCLUDED_contact_2eproto
#define PROTOBUF_INCLUDED_contact_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_contact_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_contact_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_contact_2eproto();
namespace PhoneBookSerialize {
class Contact;
class ContactDefaultTypeInternal;
extern ContactDefaultTypeInternal _Contact_default_instance_;
class ContactList;
class ContactListDefaultTypeInternal;
extern ContactListDefaultTypeInternal _ContactList_default_instance_;
class Date;
class DateDefaultTypeInternal;
extern DateDefaultTypeInternal _Date_default_instance_;
}  // namespace PhoneBookSerialize
namespace google {
namespace protobuf {
template<> ::PhoneBookSerialize::Contact* Arena::CreateMaybeMessage<::PhoneBookSerialize::Contact>(Arena*);
template<> ::PhoneBookSerialize::ContactList* Arena::CreateMaybeMessage<::PhoneBookSerialize::ContactList>(Arena*);
template<> ::PhoneBookSerialize::Date* Arena::CreateMaybeMessage<::PhoneBookSerialize::Date>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace PhoneBookSerialize {

// ===================================================================

class Date :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhoneBookSerialize.Date) */ {
 public:
  Date();
  virtual ~Date();

  Date(const Date& from);

  inline Date& operator=(const Date& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Date(Date&& from) noexcept
    : Date() {
    *this = ::std::move(from);
  }

  inline Date& operator=(Date&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Date& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Date* internal_default_instance() {
    return reinterpret_cast<const Date*>(
               &_Date_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Date* other);
  friend void swap(Date& a, Date& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Date* New() const final {
    return CreateMaybeMessage<Date>(nullptr);
  }

  Date* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Date>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Date& from);
  void MergeFrom(const Date& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Date* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 year = 1;
  void clear_year();
  static const int kYearFieldNumber = 1;
  ::google::protobuf::uint32 year() const;
  void set_year(::google::protobuf::uint32 value);

  // uint32 month = 2;
  void clear_month();
  static const int kMonthFieldNumber = 2;
  ::google::protobuf::uint32 month() const;
  void set_month(::google::protobuf::uint32 value);

  // uint32 day = 3;
  void clear_day();
  static const int kDayFieldNumber = 3;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PhoneBookSerialize.Date)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_contact_2eproto;
};
// -------------------------------------------------------------------

class Contact :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhoneBookSerialize.Contact) */ {
 public:
  Contact();
  virtual ~Contact();

  Contact(const Contact& from);

  inline Contact& operator=(const Contact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Contact(Contact&& from) noexcept
    : Contact() {
    *this = ::std::move(from);
  }

  inline Contact& operator=(Contact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Contact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Contact* internal_default_instance() {
    return reinterpret_cast<const Contact*>(
               &_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Contact* other);
  friend void swap(Contact& a, Contact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Contact* New() const final {
    return CreateMaybeMessage<Contact>(nullptr);
  }

  Contact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Contact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Contact& from);
  void MergeFrom(const Contact& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string phone_number = 3;
  int phone_number_size() const;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number(int index) const;
  ::std::string* mutable_phone_number(int index);
  void set_phone_number(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(int index, ::std::string&& value);
  #endif
  void set_phone_number(int index, const char* value);
  void set_phone_number(int index, const char* value, size_t size);
  ::std::string* add_phone_number();
  void add_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void add_phone_number(::std::string&& value);
  #endif
  void add_phone_number(const char* value);
  void add_phone_number(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& phone_number() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_phone_number();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .PhoneBookSerialize.Date birthday = 2;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 2;
  const ::PhoneBookSerialize::Date& birthday() const;
  ::PhoneBookSerialize::Date* release_birthday();
  ::PhoneBookSerialize::Date* mutable_birthday();
  void set_allocated_birthday(::PhoneBookSerialize::Date* birthday);

  // @@protoc_insertion_point(class_scope:PhoneBookSerialize.Contact)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> phone_number_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::PhoneBookSerialize::Date* birthday_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_contact_2eproto;
};
// -------------------------------------------------------------------

class ContactList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhoneBookSerialize.ContactList) */ {
 public:
  ContactList();
  virtual ~ContactList();

  ContactList(const ContactList& from);

  inline ContactList& operator=(const ContactList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactList(ContactList&& from) noexcept
    : ContactList() {
    *this = ::std::move(from);
  }

  inline ContactList& operator=(ContactList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ContactList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactList* internal_default_instance() {
    return reinterpret_cast<const ContactList*>(
               &_ContactList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ContactList* other);
  friend void swap(ContactList& a, ContactList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactList* New() const final {
    return CreateMaybeMessage<ContactList>(nullptr);
  }

  ContactList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContactList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContactList& from);
  void MergeFrom(const ContactList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContactList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PhoneBookSerialize.Contact contact = 1;
  int contact_size() const;
  void clear_contact();
  static const int kContactFieldNumber = 1;
  ::PhoneBookSerialize::Contact* mutable_contact(int index);
  ::google::protobuf::RepeatedPtrField< ::PhoneBookSerialize::Contact >*
      mutable_contact();
  const ::PhoneBookSerialize::Contact& contact(int index) const;
  ::PhoneBookSerialize::Contact* add_contact();
  const ::google::protobuf::RepeatedPtrField< ::PhoneBookSerialize::Contact >&
      contact() const;

  // @@protoc_insertion_point(class_scope:PhoneBookSerialize.ContactList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PhoneBookSerialize::Contact > contact_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_contact_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Date

// uint32 year = 1;
inline void Date::clear_year() {
  year_ = 0u;
}
inline ::google::protobuf::uint32 Date::year() const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Date.year)
  return year_;
}
inline void Date::set_year(::google::protobuf::uint32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Date.year)
}

// uint32 month = 2;
inline void Date::clear_month() {
  month_ = 0u;
}
inline ::google::protobuf::uint32 Date::month() const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Date.month)
  return month_;
}
inline void Date::set_month(::google::protobuf::uint32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Date.month)
}

// uint32 day = 3;
inline void Date::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 Date::day() const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Date.day)
  return day_;
}
inline void Date::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Date.day)
}

// -------------------------------------------------------------------

// Contact

// string name = 1;
inline void Contact::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::name() const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Contact.name)
  return name_.GetNoArena();
}
inline void Contact::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Contact.name)
}
#if LANG_CXX11
inline void Contact::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PhoneBookSerialize.Contact.name)
}
#endif
inline void Contact::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhoneBookSerialize.Contact.name)
}
inline void Contact::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhoneBookSerialize.Contact.name)
}
inline ::std::string* Contact::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PhoneBookSerialize.Contact.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_name() {
  // @@protoc_insertion_point(field_release:PhoneBookSerialize.Contact.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PhoneBookSerialize.Contact.name)
}

// .PhoneBookSerialize.Date birthday = 2;
inline bool Contact::has_birthday() const {
  return this != internal_default_instance() && birthday_ != nullptr;
}
inline void Contact::clear_birthday() {
  if (GetArenaNoVirtual() == nullptr && birthday_ != nullptr) {
    delete birthday_;
  }
  birthday_ = nullptr;
}
inline const ::PhoneBookSerialize::Date& Contact::birthday() const {
  const ::PhoneBookSerialize::Date* p = birthday_;
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Contact.birthday)
  return p != nullptr ? *p : *reinterpret_cast<const ::PhoneBookSerialize::Date*>(
      &::PhoneBookSerialize::_Date_default_instance_);
}
inline ::PhoneBookSerialize::Date* Contact::release_birthday() {
  // @@protoc_insertion_point(field_release:PhoneBookSerialize.Contact.birthday)
  
  ::PhoneBookSerialize::Date* temp = birthday_;
  birthday_ = nullptr;
  return temp;
}
inline ::PhoneBookSerialize::Date* Contact::mutable_birthday() {
  
  if (birthday_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhoneBookSerialize::Date>(GetArenaNoVirtual());
    birthday_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PhoneBookSerialize.Contact.birthday)
  return birthday_;
}
inline void Contact::set_allocated_birthday(::PhoneBookSerialize::Date* birthday) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete birthday_;
  }
  if (birthday) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      birthday = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, birthday, submessage_arena);
    }
    
  } else {
    
  }
  birthday_ = birthday;
  // @@protoc_insertion_point(field_set_allocated:PhoneBookSerialize.Contact.birthday)
}

// repeated string phone_number = 3;
inline int Contact::phone_number_size() const {
  return phone_number_.size();
}
inline void Contact::clear_phone_number() {
  phone_number_.Clear();
}
inline const ::std::string& Contact::phone_number(int index) const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.Contact.phone_number)
  return phone_number_.Get(index);
}
inline ::std::string* Contact::mutable_phone_number(int index) {
  // @@protoc_insertion_point(field_mutable:PhoneBookSerialize.Contact.phone_number)
  return phone_number_.Mutable(index);
}
inline void Contact::set_phone_number(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Contact.phone_number)
  phone_number_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Contact::set_phone_number(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PhoneBookSerialize.Contact.phone_number)
  phone_number_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Contact::set_phone_number(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  phone_number_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PhoneBookSerialize.Contact.phone_number)
}
inline void Contact::set_phone_number(int index, const char* value, size_t size) {
  phone_number_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PhoneBookSerialize.Contact.phone_number)
}
inline ::std::string* Contact::add_phone_number() {
  // @@protoc_insertion_point(field_add_mutable:PhoneBookSerialize.Contact.phone_number)
  return phone_number_.Add();
}
inline void Contact::add_phone_number(const ::std::string& value) {
  phone_number_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PhoneBookSerialize.Contact.phone_number)
}
#if LANG_CXX11
inline void Contact::add_phone_number(::std::string&& value) {
  phone_number_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PhoneBookSerialize.Contact.phone_number)
}
#endif
inline void Contact::add_phone_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  phone_number_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PhoneBookSerialize.Contact.phone_number)
}
inline void Contact::add_phone_number(const char* value, size_t size) {
  phone_number_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PhoneBookSerialize.Contact.phone_number)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Contact::phone_number() const {
  // @@protoc_insertion_point(field_list:PhoneBookSerialize.Contact.phone_number)
  return phone_number_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Contact::mutable_phone_number() {
  // @@protoc_insertion_point(field_mutable_list:PhoneBookSerialize.Contact.phone_number)
  return &phone_number_;
}

// -------------------------------------------------------------------

// ContactList

// repeated .PhoneBookSerialize.Contact contact = 1;
inline int ContactList::contact_size() const {
  return contact_.size();
}
inline void ContactList::clear_contact() {
  contact_.Clear();
}
inline ::PhoneBookSerialize::Contact* ContactList::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:PhoneBookSerialize.ContactList.contact)
  return contact_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PhoneBookSerialize::Contact >*
ContactList::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:PhoneBookSerialize.ContactList.contact)
  return &contact_;
}
inline const ::PhoneBookSerialize::Contact& ContactList::contact(int index) const {
  // @@protoc_insertion_point(field_get:PhoneBookSerialize.ContactList.contact)
  return contact_.Get(index);
}
inline ::PhoneBookSerialize::Contact* ContactList::add_contact() {
  // @@protoc_insertion_point(field_add:PhoneBookSerialize.ContactList.contact)
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PhoneBookSerialize::Contact >&
ContactList::contact() const {
  // @@protoc_insertion_point(field_list:PhoneBookSerialize.ContactList.contact)
  return contact_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PhoneBookSerialize

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_contact_2eproto
